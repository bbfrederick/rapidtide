#!/usr/bin/env python

import matplotlib.pyplot as plt
import numpy as np

import rapidtide.calccoherence as tide_calccoherence
import rapidtide.filter as tide_filt
import rapidtide.helper_classes as tide_classes
import rapidtide.io as tide_io

thereftc = tide_io.readvec("lf_HbO")
thetesttc = tide_io.readvec("lt_HbO")
thereftc = tide_io.readvec("mot1")
thetesttc = tide_io.readvec("mot2")
thefilter = tide_filt.NoncausalFilter("lfo")

print("setting up Coherer")
theCoherer = tide_classes.Coherer(
    Fs=(1.0 / 1.16), reftc=thereftc, freqmin=0.0, freqmax=0.2, ncprefilter=thefilter, debug=True
)
print("done setting up Coherer")


print("running Coherer")
yaxis, xaxis, maxindex = theCoherer.run(thetesttc, trim=True)
yaxis2, xaxis2, maxindex2, csdxy, csdxx, csdyy = theCoherer.run(thetesttc, trim=True, alt=True)
print(maxindex, maxindex2)
print("done running Coherer")

# dummy, xaxis2, yaxis2, dummy, dummy = tide_calccoherence._procOneVoxelCoherence(
# 0,
# theCoherer,
# thetesttc)

print(theCoherer.freqmin, theCoherer.freqmininpts, theCoherer.freqmax, theCoherer.freqmaxinpts)

# print(xaxis)
# print(yaxis)
print(maxindex)
print("peak value of {:.3f} occurs at {:.3f}Hz".format(yaxis[maxindex], xaxis[maxindex]))
print("peak value of {:.3f} occurs at {:.3f}Hz".format(yaxis2[maxindex2], xaxis2[maxindex2]))

plt.figure()
plt.plot(xaxis, yaxis, "r")
plt.plot(xaxis2, yaxis2, "b")
plt.legend(["normal", "alt"])
plt.show()

plt.figure()
plt.plot(xaxis2, yaxis2)
plt.show()

preppedref = theCoherer.prepreftc
preppeddata = theCoherer.preptesttc

plt.figure()
plt.plot(preppedref)
plt.plot(preppeddata)
plt.show()

# np.savetxt('preppedref.txt', preppedref)
# np.savetxt('preppeddata.txt', preppeddata)
