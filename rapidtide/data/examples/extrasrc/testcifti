#!/usr/bin/env python

import sys

import nibabel as nib
import numpy as np

import rapidtide.io as tide_io

# infile = "/Users/frederic/Dropbox_PHC/connectome_quality/rfMRI_REST1_LR_Atlas.dtseries.nii"
infile = "/Users/frederic/Dropbox_PHC/connectome_quality/100307_r1_LR_Cparc.ptseries.nii"
outfile = "../dst/test"


def ciftidump(filename):
    if tide_io.checkifcifti(infile):
        cifti, cifti_hdr, nifti_data, nifti_hdr, thedims, thesizes, fmritr = tide_io.readfromcifti(
            filename
        )

        # dump the file
        print("filename:", filename)
        print("\ncifti:")
        print(cifti)

        print("\ncifti_hdr:")
        print("\t", cifti_hdr)
        print("\t", cifti_hdr.matrix.get_data_shape())
        for theaxis in cifti_hdr.matrix.mapped_indices:
            print("\t", cifti_hdr.matrix.get_axis(theaxis))
        # print('\t', cifti_hdr.cifti2_axes.from_index_mapping())

        print("\nnifti_hdr:")
        print("\t", nifti_hdr)

        print("\nthedims:")
        print("\t", thedims)

        print("\nthesizes:")
        print("\t", thesizes)

        print("\nfmritr:")
        print("\t", fmritr)

        return cifti, cifti_hdr, nifti_data, nifti_hdr, thedims, thesizes, fmritr
    else:
        return None, None, None, None, None, None, None


filenames = [
    "/Users/frederic/Dropbox_PHC/connectome_quality/rfMRI_REST1_LR_Atlas.dtseries.nii",
    "/Users/frederic/Dropbox_PHC/connectome_quality/rfMRI_REST1_LR_Atlas_hp2000_clean.dtseries.nii",
    "/Users/frederic/Dropbox_PHC/connectome_quality/100307_r1_LR_Cparc.ptseries.nii",
]
# "../dst/fix_desc-corrout_info.dtseries.nii",
# "../dst/nofix_desc-corrout_info.dtseries.nii",
# "../dst/fix_desc-maxtime_map.dscalar.nii",
# "../dst/nofix_desc-maxtime_map.dscalar.nii",
# "../dst/fix_desc-lfofilterCleaned_bold.dtseries.nii",
# "../dst/nofix_desc-lfofilterCleaned_bold.dtseries.nii",
# ]

for thefile in filenames:
    cifti, cifti_hdr, nifti_data, nifti_hdr, thedims, thesizes, fmritr = ciftidump(thefile)
    print("\n\n\n")

sys.exit()


if cifti is not None:
    print("nifti data shape:", nifti_data.shape)
    print("file TR is:", fmritr)
    # tide_io.savetocifti(nifti_data, cifti_hdr, nifti_hdr, outfile, start=0.0, step=1.3)
    print(cifti_hdr)
    print(thedims)
    print(thesizes)
else:
    print("file is not cifti")
